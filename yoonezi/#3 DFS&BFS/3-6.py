# # 빈 문자열인 경우 > 빈 문자열 반환
# 입력 받은 값을 순회하며 () 인 경우 result1[]에 넣고 올바르지 않은 경우 tmp[]에 넣는다.
# 만약 tmp 뒤에 올바른 값이 있다면 result2[]에 넣는다.
# tmp에 있는 값들을 ( -> ) // ) -> ( 로 바꿔주고
# answer = result1 +  tmp + result2 ??
# 그럼 재귀를 어떻게 사용하지 ??

# 올바른지 검사하고 두 문자열로 분리시키는 함수를 재귀적으로 ?
# 먼저 재귀 함수로 분리 해주고, -> 얼만큼 ?? 
# 올바르지 않은 부분을 바꿔주고 ,, 그대로 이어 붙이기 ..?

# >>>>>>
# 1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. 
# 2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다. 단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다. 
# 3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다. 
#   3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. 
# 4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다. 
#   4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다. 
#   4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. 
#   4-3. ')'를 다시 붙입니다. 
#   4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다. 
#   4-5. 생성된 문자열을 반환합니다.

# 문자열 u, v로 분리 (2)
# u가 올바른 문자열인지  확인 (3)

def divide(w):
    # 2. 단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다. 
    openP = 0 # 열린 괄호 세는 변수
    closeP = 0 # 닫힌 괄호 세는 변수
    
    for i in range (len(w)):
        if w[i] == '(':
            openP += 1
        else:
            closeP += 1
        #열린괄호와 닫힌괄호 수가 같다면 u, v 로 반환
        if openP == closeP:
            return w[:i+1], w[i+1:]
      
# 3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다.   
def isBalanced(u):
    result = []
    
    for j in u:
        if j == '(':
            result.append(j)
        else:
        # result 비어있는 경우, 즉 '('를 닫을 ')'이 없는 상태에서 ')'를 만났을 때, 올바른 괄호 문자열이 아니므로 False를 반환합니다. 
            if not result:
                return False
            result.pop()
    return True


def solution(w):
    # 1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. 
    if not w:
        return ""
    # 2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다. 
    u, v = divide(w)
    
    if isBalanced(u):
    #   3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. 
        return u + solution(v)
    # 4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다. 
    else:
    #   4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다.
        answer = '('
    #   4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. 
        answer += solution(v)
    #   4-3. ')'를 다시 붙입니다. 
        answer += ')'
    #   4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다. 
        for i in u[1:len(u)-1]:
            if i == '(':
                answer += ')'
            else:
                answer += '('
        
    return answer